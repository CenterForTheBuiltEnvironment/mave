#!/usr/bin/env python
"""
Building Energy Prediction

This software reads an input file (a required argument) containing 
building energy data in a format similar to example file. 
It then trains a model and estimates the error associated
with predictions using the model.

@author Paul Raftery <p.raftery@berkeley.edu>
@author Tyler Hoyt <thoyt@berkeley.edu>
"""

from mave.core import Preprocessor, ModelAggregator, SingleModelMeasurementAndVerification
from datetime import datetime
import pdb
import argparse, logging

def mave(input_file=None,
         verbose=None,
         start_frac=None,
         end_frac=None):
    f = open(input_file, 'Ur')
    changepoints = [
                   (datetime(2012, 6, 1, 0, 0),0),
                   (datetime(2012, 6, 1, 0, 0),1)
                  ]
    mnv = SingleModelMnV(input_file=f,changepoints=changepoints)
    logger.info(mnv)

if __name__=='__main__': 
    # parse args
    parser = argparse.ArgumentParser()
    parser.add_argument("input_file", 
                        help="filename for input data - REQUIRED ")
#    parser.add_argument("-sf","--start_frac", type=float, default = 0.2, 
#                        help="truncate data before this fraction \
#                              of the file length")
#    parser.add_argument("-ef","--end_frac", type=float, default = 0.4, 
#                        help="truncate data from this fraction \
#                              of the file onwards")
    parser.add_argument("-v", "--verbose", action="store_true",
                                            help="increase output verbosity")
    args = parser.parse_args()  
    
    # set up logging to screen and file
    logger = logging.getLogger(__name__)
    logger.setLevel(logging.INFO)
    fo = logging.FileHandler("mave.log")
    fo.setLevel(logging.INFO)
    logger.addHandler(fo)
    if args.verbose:
    # log to screen also
        po = logging.StreamHandler()
        po.setLevel(logging.INFO)
        logger.addHandler(po)
    logger.info("\nAssessing input file: %s" % args.input_file)
    
    mave(**args.__dict__)
